name: App Service Docker

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}
  AZURE_WEBAPP_NAME: elitinfo-ai-agent

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # Use GHCR_PAT secret here for full read/write access
          password: ${{ secrets.GHCR_PAT }}

      - name: Create .env.build file
        run: |
          echo "NEXT_PUBLIC_COPILOTKIT_BACKEND_URL=${{ secrets.NEXT_PUBLIC_COPILOTKIT_BACKEND_URL }}" >> .env.build
          echo "NEXT_PUBLIC_COPILOTKIT_API=${{ secrets.NEXT_PUBLIC_COPILOTKIT_API }}" >> .env.build
          echo "NEXT_PUBLIC_GROQ_CLOUD_API_KEY=${{ secrets.NEXT_PUBLIC_GROQ_CLOUD_API_KEY }}" >> .env.build
          echo "NEXT_PUBLIC_RESTDB_API_KEY=${{ secrets.NEXT_PUBLIC_RESTDB_API_KEY }}" >> .env.build
          echo "NEXT_PUBLIC_RESTDB_CUSTOMERS_URL=${{ secrets.NEXT_PUBLIC_RESTDB_CUSTOMERS_URL }}" >> .env.build
          echo "NEXT_PUBLIC_RESTDB_SUPPLIERS_URL=${{ secrets.NEXT_PUBLIC_RESTDB_SUPPLIERS_URL }}" >> .env.build
          echo "NEXT_PUBLIC_RESTDB_PRODUCTS_URL=${{ secrets.NEXT_PUBLIC_RESTDB_PRODUCTS_URL }}" >> .env.build
          echo "NEXT_PUBLIC_RESTDB_INVOICES_URL=${{ secrets.NEXT_PUBLIC_RESTDB_INVOICES_URL }}" >> .env.build
          echo "NEXT_PUBLIC_RESTDB_INVOICE_LINES_URL=${{ secrets.NEXT_PUBLIC_RESTDB_INVOICE_LINES_URL }}" >> .env.build
          echo "NEXT_PUBLIC_RESTDB_PAYMENTS_URL=${{ secrets.NEXT_PUBLIC_RESTDB_PAYMENTS_URL }}" >> .env.build
          echo "NEXT_PUBLIC_RESTDB_PURCHASE_ORDERS_URL=${{ secrets.NEXT_PUBLIC_RESTDB_PURCHASE_ORDERS_URL }}" >> .env.build

      - name: Build and push container image
        id: docker_build
        run: |
          IMAGE_ID=${{ env.REGISTRY }}/$(echo ${{ env.REPO }} | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
          docker build -t $IMAGE_ID:${{ github.sha }} -f ./Dockerfile .
          docker push $IMAGE_ID:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to GHCR for Azure Pull
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{ env.IMAGE_ID }}:${{ github.sha }}
